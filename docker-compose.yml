name: pgai
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/social_app
      - OLLAMA_BASE_URL=http://ollama:11434
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - ENVIRONMENT=development
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - app-network
    container_name: api
    restart: always
    command: >
      bash -c "
        echo 'Waiting for database to be ready...'
        sleep 5
        echo 'Database should be up - starting API'
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  db:
    image: timescale/timescaledb-ha:pg17
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=social_app
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/home/postgres/pgdata/data
    command: [ "-c", "ai.ollama_host=http://ollama:11434" ]
    networks:
      - app-network
    container_name: db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    
  vectorizer-worker:
    image: timescale/pgai-vectorizer-worker:latest
    environment:
      PGAI_VECTORIZER_WORKER_DB_URL: postgres://postgres:postgres@db:5432/social_app
      OLLAMA_HOST: http://ollama:11434
    command: [ "--poll-interval", "5s", "--log-level", "DEBUG" ]
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_started
    networks:
      - app-network
    container_name: vectorizer-worker
      
  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    container_name: ollama
  
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: always
    command: redis-server --save 60 1 --loglevel warning
    container_name: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    name: postgres_data_ai_social_app
  ollama_data:
    name: ollama_data_ai_social_app 
  redis_data:
    name: redis_data_ai_social_app

networks:
  app-network:
    driver: bridge
